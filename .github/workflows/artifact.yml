name: artifact

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Install Zig (user local)
        if: |
          startsWith(matrix.os, 'ubuntu') &&
          (matrix.target == 'aarch64-unknown-linux-musl' || matrix.target == 'aarch64-unknown-linux-gnu')
        run: |
          ZIG_VERSION=0.11.0
          ZIG_URL="https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz"
          curl -LO "$ZIG_URL"
          tar -xf zig-linux-x86_64-${ZIG_VERSION}.tar.xz
          echo "$PWD/zig-linux-x86_64-${ZIG_VERSION}" >> $GITHUB_PATH
          echo "ZIG=$PWD/zig-linux-x86_64-${ZIG_VERSION}/zig" >> $GITHUB_ENV

      - name: Install aarch64 gnu cross toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install musl cross toolchain
        if: startsWith(matrix.os, 'ubuntu') && contains(matrix.target, 'linux-musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools gcc-aarch64-linux-gnu

      - uses: Swatinem/rust-cache@v2
      - run: npm install -g pnpm
      - run: pnpm install

      - name: Build napi binary
        run: pnpm build --target ${{ matrix.target }}

      - name: Upload napi binary
        uses: actions/upload-artifact@v4
        with:
          name: napi-binary-${{ matrix.target }}
          path: rust-glob.*.node
          retention-days: 1
